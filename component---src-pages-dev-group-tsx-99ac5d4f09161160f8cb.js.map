{"version":3,"sources":["webpack:///./src/components/presntation/colorBox.tsx","webpack:///./src/components/devGroupSession.tsx","webpack:///./src/pages/devGroup.tsx","webpack:///./src/utils/devGroupService.ts"],"names":["useStyles","makeStyles","theme","sharedStyles","box","backgroundColor","palette","secondary","main","width","height","lineHeight","display","verticalAlign","borderRadius","ColorBox","children","useTheme","css","className","session","gridTemplateColumns","gridGap","spacing","padding","details","border","colors","muted","DevGroupSession","src","thumbnails","medium","url","alt","pt65","wt700","join","day","monthYear","style","textAlign","href","link","target","mutedText","title","container","DevGroupPage","props","useState","videos","setVideos","useEffect","getVideos","then","data","map","index","key","id","a","axios","get","response","x","moment","publishedAt","format"],"mappings":"4KAIMA,EAAYC,aAAW,SAACC,GAAD,sCACvBC,YAAaD,IADU,IAE1BE,IAAK,CACFC,gBAAiBH,EAAMI,QAAQC,UAAUC,KACzCC,MAAO,OACPC,OAAQ,OACRC,WAAY,OACZC,QAAS,QACTC,cAAe,SACfC,aAAc,YAWLC,EAPE,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACXd,EAAQe,IACRC,EAAMlB,EAAUE,GAEtB,OAAO,yBAAKiB,UAAWD,EAAId,KAAMY,IChB9BhB,EAAYC,aAAW,SAACC,GAAD,sCACvBC,YAAaD,IADU,IAE1BkB,QAAS,CACNR,QAAS,OACTS,oBAAqB,MACrBC,QAASpB,EAAMqB,QAAQ,GACvBC,QAAStB,EAAMqB,QAAQ,IAE1BE,QAAS,CACNb,QAAS,OACTS,oBAAqB,UACrBC,QAASpB,EAAMqB,QAAQ,GACvBG,OAAQ,aAAaC,IAAOC,MAC5BJ,QAAStB,EAAMqB,QAAQ,SA+BdM,IA3BS,SAAC,GAAgB,IAAdT,EAAc,EAAdA,QAClBlB,EAAQe,cACRC,EAAMlB,EAAUE,GACtB,OACG,yBAAKiB,UAAWD,EAAIE,SACjB,6BACG,yBAAKU,IAAKV,EAAQW,WAAWC,OAAOC,IAAKC,IAAI,qBAEhD,yBAAKf,UAAWD,EAAIO,SACjB,kBAAC,EAAD,KACG,6BACG,yBAAKN,UAAW,CAACD,EAAIiB,KAAMjB,EAAIkB,OAAOC,KAAK,MACvCjB,EAAQkB,KAEZ,6BAAMlB,EAAQmB,aAGpB,0BAAMC,MAAO,CAAEC,UAAW,SACvB,uBAAGC,KAAMtB,EAAQuB,KAAMC,OAAO,SAASzB,UAAWD,EAAI2B,WAClDzB,EAAQ0B,Y,gKC9BrB9C,EAAYC,aAAW,SAACC,GAAD,sCACvBC,YAAaD,IADU,IAE1B6C,UAAW,CACRnC,QAAS,OACTU,QAASpB,EAAMqB,QAAQ,GACvBF,oBAAqB,oBA8BZ2B,UA1BM,SAACC,GACnB,IAAM/C,EAAQe,cACRC,EAAMlB,EAAUE,GAFkB,EAGZgD,mBAAS,IAA9BC,EAHiC,KAGzBC,EAHyB,KAUxC,OANAC,qBAAU,WACPC,cAAYC,MAAK,SAACC,GACfJ,EAAUI,QAEb,IAGA,kBAAC,IAAD,KACG,kBAAC,IAAD,MACA,kDACA,yBAAKrC,UAAWD,EAAI6B,WAChBI,EAAOM,KAAI,SAACrC,EAASsC,GAAV,OACT,kBAAC,IAAD,CACGtC,QAASA,EACTuC,IAAG,WAAavC,EAAQwC,GAArB,IAA2BF,QAGhC,O,gSCtCT,IAAMJ,EAAS,e,EAAA,G,EAAA,UAAG,8BAAAO,EAAA,sEACCC,IAAMC,IAC1B,sEAFmB,cAChBC,EADgB,OAIhBR,EAAOQ,EAASR,KAAKC,KAAI,SAACQ,GAG7B,OAFAA,EAAE3B,IAAM4B,IAAOD,EAAEE,aAAaC,OAAO,KACrCH,EAAE1B,UAAY2B,IAAOD,EAAEE,aAAaC,OAAO,YACpCH,KAPY,kBASfT,GATe,0C,+KAAH","file":"component---src-pages-dev-group-tsx-99ac5d4f09161160f8cb.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useTheme, makeStyles, Theme } from '@material-ui/core'\r\nimport { sharedStyles } from '../../styles/global'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   box: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      width: '90px',\r\n      height: '85px',\r\n      lineHeight: '40px',\r\n      display: 'block',\r\n      verticalAlign: 'center',\r\n      borderRadius: '8px',\r\n   },\r\n}))\r\n\r\nconst ColorBox = ({ children }) => {\r\n   const theme = useTheme\r\n   const css = useStyles(theme)\r\n\r\n   return <div className={css.box}>{children}</div>\r\n}\r\n\r\nexport default ColorBox\r\n","import React from 'react'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../styles/global'\r\nimport ColorBox from '../components/presntation/colorBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   session: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '1fr',\r\n      gridGap: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n   },\r\n   details: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '1fr 3fr',\r\n      gridGap: theme.spacing(2),\r\n      border: `1px solid ${colors.muted}`,\r\n      padding: theme.spacing(2),\r\n   },\r\n}))\r\n\r\nconst DevGroupSession = ({ session }) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   return (\r\n      <div className={css.session}>\r\n         <div>\r\n            <img src={session.thumbnails.medium.url} alt=\"{session.title}\" />\r\n         </div>\r\n         <div className={css.details}>\r\n            <ColorBox>\r\n               <div>\r\n                  <div className={[css.pt65, css.wt700].join(' ')}>\r\n                     {session.day}\r\n                  </div>\r\n                  <div>{session.monthYear}</div>\r\n               </div>\r\n            </ColorBox>\r\n            <span style={{ textAlign: 'left' }}>\r\n               <a href={session.link} target=\"_blank\" className={css.mutedText}>\r\n                  {session.title}\r\n               </a>\r\n            </span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DevGroupSession\r\n","// Gatsby supports TypeScript natively!\r\nimport React, { useEffect, useState } from 'react'\r\nimport { PageProps } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Nav from '../components/nav'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../styles/global'\r\nimport { getVideos } from '../utils/devGroupService'\r\nimport DevGroupSession from '../components/devGroupSession'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   container: {\r\n      display: 'grid',\r\n      gridGap: theme.spacing(2),\r\n      gridTemplateColumns: '1fr 1fr 1fr',\r\n   },\r\n}))\r\n\r\nconst DevGroupPage = (props: PageProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   const [videos, setVideos] = useState([])\r\n   useEffect(() => {\r\n      getVideos().then((data) => {\r\n         setVideos(data)\r\n      })\r\n   }, [])\r\n\r\n   return (\r\n      <Layout>\r\n         <Nav></Nav>\r\n         <h1>Dev Group Sessions</h1>\r\n         <div className={css.container}>\r\n            {videos.map((session, index) => (\r\n               <DevGroupSession\r\n                  session={session}\r\n                  key={`session-${session.id}-${index}`}\r\n               />\r\n            ))}\r\n         </div>{' '}\r\n      </Layout>\r\n   )\r\n}\r\n\r\nexport default DevGroupPage\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nexport const getVideos = async () => {\r\n   const response = await axios.get(\r\n      'https://gsfcdevgroup.azurewebsites.net/api/GetGSFCDevGroupSessions'\r\n   )\r\n   const data = response.data.map((x) => {\r\n      x.day = moment(x.publishedAt).format('D')\r\n      x.monthYear = moment(x.publishedAt).format('MMM-YYYY')\r\n      return x\r\n   })\r\n   return data\r\n}\r\n"],"sourceRoot":""}