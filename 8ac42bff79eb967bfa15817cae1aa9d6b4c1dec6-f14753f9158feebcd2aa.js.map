{"version":3,"sources":["webpack:///./src/models/tab.ts","webpack:///./src/models/index.ts","webpack:///./src/components/podcastEpisode.tsx","webpack:///./src/components/podcast.tsx","webpack:///./src/data/info.ts","webpack:///./node_modules/dayjs/plugin/relativeTime.js","webpack:///./src/utils/podcastService.ts","webpack:///./src/components/podcastAppearance.tsx"],"names":["TabEnum","useStyles","makeStyles","theme","sharedStyles","episode","display","gridTemplateColumns","gap","spacing","padding","textAlign","breakpoints","down","marginBottom","episodeBlock","maxHeight","overflow","paddingRight","color","colors","muted","episodeTitle","episodeIcon","width","minWidth","PodCastEpisode","props","useTheme","css","windowSize","useWindowSize","largeScreen","values","sm","episodeContainerMaxWidth","height","className","src","podcast","uuid","alt","title","style","marginLeft","href","url","maxWidth","dangerouslySetInnerHTML","__html","showNotes","dayjs","relativeTime","podcastBlock","gridGap","borderRadius","subTitle","Podcast","text","length","substr","lastSpaceIndex","useState","data","show","setShow","join","pt30","mutedText","pt20","lastEpisodePublished","fromNow","displayFullDetails","description","substring","lastIndexOf","onClick","showDetails","info","me","firstName","lastName","email","age","diff","workExperience","company","start","end","responsibilities","social","name","username","link","projects","code","repo","podcastAppearances","podcastName","topic","nasa","lastDay","module","exports","r","t","e","n","prototype","o","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","i","fromToBase","en","u","a","f","l","$locale","thresholds","c","p","rounding","Math","round","abs","v","replace","to","this","from","$u","utc","toNow","getPodcastInfo","axios","get","response","podcasts","forEach","x","Date","appearanceIds","map","queue","podcastUuid","_getPodcast","starred","appearances","filter","includes","episodeInfo","find","published","sort","b","getTime","_getListeningTimeInHours","timeInSeconds","floor","_getListeningStartDate","dateStr","format","marginTop","PodCastAppearance"],"mappings":"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","file":"8ac42bff79eb967bfa15817cae1aa9d6b4c1dec6-f14753f9158feebcd2aa.js","sourcesContent":["export enum TabEnum {\r\n   Starred = 'Starred',\r\n   Queue = 'Queue',\r\n   Subscribed = 'Subscribed',\r\n   Appearances = 'Appearances',\r\n}\r\nexport interface Tab {\r\n   title: string\r\n   count: number\r\n   value: TabEnum\r\n}\r\n","export * from './blog'\r\nexport * from './info'\r\nexport * from './podcast'\r\nexport * from './tab'\r\nexport * from './video'\r\n","import React from 'react'\r\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles'\r\nimport { Episode, StarredEpisode } from '../models'\r\nimport { colors, sharedStyles } from '../styles/global'\r\nimport { useWindowSize } from '../hooks/useWindowSize'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   episode: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '150px 1fr',\r\n      gap: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n      '& div': {\r\n         textAlign: 'left',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         marginBottom: theme.spacing(2),\r\n      },\r\n   },\r\n   episodeBlock: {\r\n      display: 'block',\r\n      maxHeight: '200px',\r\n      overflow: 'auto',\r\n      paddingRight: `1rem`,\r\n      color: colors.muted,\r\n   },\r\n   episodeTitle: {\r\n      marginBottom: '2rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n         textAlign: 'center',\r\n      },\r\n   },\r\n   episodeIcon: {\r\n      width: '100%',\r\n      minWidth: '80px',\r\n      [theme.breakpoints.down('sm')]: {\r\n         width: '100%',\r\n      },\r\n   },\r\n}))\r\n\r\ninterface PodcastEpisodeProps {\r\n   episode: Episode | StarredEpisode\r\n}\r\n\r\nconst PodCastEpisode = (props: PodcastEpisodeProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   const { episode } = props\r\n\r\n   const windowSize = useWindowSize()\r\n   const largeScreen =\r\n      windowSize.width > theme.breakpoints.values.sm ? true : false\r\n   const episodeContainerMaxWidth = (windowSize.height / 2) * 0.9\r\n\r\n   return (\r\n      <div className={css.episode}>\r\n         <div>\r\n            <img\r\n               src={`https://static.pocketcasts.com/discover/images/130/${episode.podcast?.uuid}.jpg`}\r\n               alt={`Podcast logo for ${episode.podcast?.title || 'episode'}`}\r\n               className={css.episodeIcon}\r\n            />\r\n         </div>\r\n         <div style={{ marginLeft: theme.spacing(2) }}>\r\n            <h3 className={css.episodeTitle}>\r\n               <a href={episode.url}>{episode.title}</a>\r\n            </h3>\r\n            {largeScreen && (\r\n               <div\r\n                  className={css.episodeBlock}\r\n                  style={{\r\n                     maxWidth: episodeContainerMaxWidth,\r\n                  }}\r\n                  dangerouslySetInnerHTML={{\r\n                     __html: episode.showNotes,\r\n                  }}\r\n               />\r\n            )}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PodCastEpisode\r\n","import React, { useState } from 'react'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../styles/global'\r\nimport * as dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport { PodCast } from '../models'\r\ndayjs.extend(relativeTime)\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   podcastBlock: {\r\n      display: 'grid',\r\n      gridGap: theme.spacing(1),\r\n      gridTemplateColumns: '150px 1fr',\r\n      //border: `1px solid ${colors.muted}`,\r\n      borderRadius: '5px',\r\n      padding: theme.spacing(2),\r\n      '& div': {\r\n         textAlign: 'left',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         '& div': {\r\n            textAlign: 'center',\r\n         },\r\n      },\r\n   },\r\n   title: {\r\n      marginBottom: theme.spacing(2),\r\n   },\r\n   subTitle: {\r\n      marginBottom: theme.spacing(1),\r\n   },\r\n}))\r\n\r\nconst shorten = (text, length) => {\r\n   let substr = text.substring(0, length)\r\n   const lastSpaceIndex = substr.lastIndexOf(' ')\r\n   substr = substr.substring(0, lastSpaceIndex)\r\n   return substr\r\n}\r\n\r\ninterface PodcastProps {\r\n   data: PodCast\r\n}\r\n\r\ninterface PodcastNode extends PodCast {\r\n   displayFullDetails?: boolean\r\n}\r\n\r\nconst Podcast = (props: PodcastProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n\r\n   const [show, setShow] = useState<PodcastNode>(props.data)\r\n   const showDetails = (show) => {\r\n      show.displayFullDetails = true\r\n      setShow({ ...show })\r\n   }\r\n\r\n   return (\r\n      <div className={[css.podcastBlock].join(' ')}>\r\n         <div>\r\n            <img\r\n               src={`https://static.pocketcasts.com/discover/images/130/${show.uuid}.jpg`}\r\n               alt=\"{show.title}\"\r\n            />\r\n         </div>\r\n         <div>\r\n            <div className={[css.title, css.pt30].join(' ')}>\r\n               <a href={show.url}>{show.title}</a>\r\n            </div>\r\n            <p className={[css.mutedText, css.pt20, css.subTitle].join(' ')}>\r\n               Latest Episode: {dayjs(show.lastEpisodePublished).fromNow()}\r\n            </p>\r\n            <p>\r\n               {show.displayFullDetails || show.description.length < 200 ? (\r\n                  <span>{show.description}</span>\r\n               ) : (\r\n                  <div>\r\n                     {shorten(show.description, 200)} ...{' '}\r\n                     <a onClick={() => showDetails(show)}>show more</a>\r\n                  </div>\r\n               )}\r\n            </p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Podcast\r\n","import dayjs from 'dayjs'\r\nimport { Info } from '../models'\r\n\r\nexport const info: Info = {\r\n   me: {\r\n      firstName: 'Andre',\r\n      lastName: 'Young',\r\n      email: 'andrejyoung@gmail.com',\r\n      age: dayjs().diff(dayjs('1979-09', 'YYYY-MM'), 'years'),\r\n      workExperience: [\r\n         {\r\n            company: 'Capital One',\r\n            title: 'Senior Manager, Software Engineering',\r\n            start: '2020-04',\r\n            end: '',\r\n            responsibilities: [\r\n               'Technical lead for the Safehouse and Discovery teams.',\r\n               'Talent and Performance management.',\r\n               'Development and coaching team members.',\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC Inuteq (NASA)',\r\n            title: 'Application Development Lead & IT Lead',\r\n            start: '2012-07',\r\n            end: '2020-04',\r\n            responsibilities: [\r\n               'I served as the Application Development Lead for the contract, participating in senior management discussions and setting development goals and standards for the contract.',\r\n               'I mentored developers at all levels, providing feedback on code and career coaching.',\r\n               'I also served as the Lead developer and primary point of contact for 5 active projects with 3 separate customers including a redesign and re-platforming of the Exploration & Space Communications (ESC) public website from Drupal to Gatsby, NodeJS and ASP.NET Core.',\r\n               'Lastly I served as the IT manager for the Exploration & Space Communications Division (Code 450) managing both development and operation activities.',\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC PRIMUS (NASA)',\r\n            title: 'Senior Application Developer',\r\n            start: '2011-07',\r\n            end: '2012-07',\r\n            responsibilities: [\r\n               `Designed and implemented new features for an online intern registration and selection (SOLAR) system. Provided architectural design support for the next version a large configuration management (CM) tool used by multiple flight projects at NASA's Goddard Space Flight Center (GSFC). Assisted with other applications as needed.`,\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC Federal (NASA)',\r\n            title: 'Senior Programmer',\r\n            start: '2007-07',\r\n            end: '2011-07',\r\n            responsibilities: [\r\n               `Tailored large scaled CM applications written primarily in Classic ASP to meet changing user requirements and needs.`,\r\n            ],\r\n         },\r\n         {\r\n            company: 'Systems Management Engineering Inc',\r\n            title: 'Software Engineer',\r\n            start: '2007-05',\r\n            end: '2007-07',\r\n            responsibilities: [\r\n               `Implement modules for Peace Corps’ Volunteer Information Database Application Project (VIDA) to transition from MS Access to a .Net 2.0 Winforms application. (MS SQL, ADO.Net, Data Dynamics ActiveReports, Infragistics NetAdvantage)`,\r\n            ],\r\n         },\r\n      ],\r\n      social: [\r\n         {\r\n            name: 'GitHub',\r\n            username: 'youngaj',\r\n            link: 'https://github.com/youngaj',\r\n         },\r\n         {\r\n            name: 'Twitter',\r\n            username: '@Dreyoung79',\r\n            link: 'https://twitter.com/Dreyoung79',\r\n         },\r\n         {\r\n            name: 'YouTube',\r\n            username: 'youngaj',\r\n            link:\r\n               'https://www.youtube.com/channel/UCr-_BId5w_QTTKcthhNRVlw/videos',\r\n         },\r\n         {\r\n            name: 'LinkedIn',\r\n            username: 'Andre Young',\r\n            link: 'https://www.linkedin.com/in/andre-young-b9a9b5b/',\r\n         },\r\n      ],\r\n      projects: [\r\n         {\r\n            title: 'Conveyor Belt (CB)',\r\n            description:\r\n               'A low code meta-platform to enable internal development teams to onboard and easily use internal Capital One platforms.  The focus of the project is to improve the internal associate experience and decrease cycle times while ensuring appropriate governance and traceabiity for intents leveraging key Capital One platforms.',\r\n         },\r\n         {\r\n            title: 'Personal Portfolio',\r\n            description:\r\n               'Hand crafted gatsby redesign of this website using Typescript, Azure Functions and more.  Checkout the repo at the link below.',\r\n            code: {\r\n               repo: 'gatsby-website',\r\n               url: 'https://github.com/youngaj/gatsby-website',\r\n            },\r\n         },\r\n         {\r\n            title: 'OneStream & Snowflake',\r\n            description:\r\n               'This project allowed product owners and partner teams to gain insights into the Focus Platform by producing a stream of events via OneStream (Kafka) into Snowflake and internal Capital One data lake.',\r\n         },\r\n         {\r\n            title: 'Commercial Real Estate Management (CREM)',\r\n            description:\r\n               'Skunkworks project to leverage internal Capital One platforms to improve rent collection and property management.',\r\n         },\r\n      ],\r\n      podcastAppearances: [\r\n         {\r\n            uuid: '3414c425-da9f-4b6d-82bf-2062b636d03d',\r\n            podcastName: 'Web Rush',\r\n            topic: 'From IC to PL',\r\n            description:\r\n               'This was my second ever guest appearance on a podcast.  The initial episode was postponed due to end of year activities and the host graciously allowed me to reschedule.  This is a topic near and dear to my heart and perhaps on the minds of many who have a bit of seniority in their careers and are considering making the jump from an IC (Individual Contributor) to a People Leader (PL).  Hope you enjoy the episode.  We only touched the surface of this topic so if you would like to learn more or chat about it reach out to me on Twitter.',\r\n            url:\r\n               'https://webrush.io/episodes/episode-164-rising-stumbling-and-getting-up-again-life-as-a-tech-manager',\r\n         },\r\n         {\r\n            uuid: '3d2522c1-668f-4c2b-899f-801d7259cb3c',\r\n            podcastName: 'Web Rush',\r\n            topic: 'Testing',\r\n            description:\r\n               'This was my first time on a podcast.  The hosts of Web Rush are engineers that I have listened to and followed for years.  It was truly a honor to be invited to share my thoughts with their audience.  The topic of my episode was testing.  This topic was inspired by my experience testing, the myths and the reality and talk I gave to the Focus Organization at Capital One shortly before the episode.  I hope you enjoy listening to this episode as much as I enjoyed making it.',\r\n            url:\r\n               'https://webrush.simplecast.com/episodes/episode-143-old-man-yells-at-tests-andre-young',\r\n         },\r\n      ],\r\n   },\r\n   nasa: {\r\n      lastDay: '2020/04/20',\r\n   },\r\n}\r\n","require(\"core-js/modules/es6.regexp.replace\");\n\n!function (r, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : r.dayjs_plugin_relativeTime = t();\n}(this, function () {\n  \"use strict\";\n\n  return function (r, t, e) {\n    r = r || {};\n    var n = t.prototype,\n        o = {\n      future: \"in %s\",\n      past: \"%s ago\",\n      s: \"a few seconds\",\n      m: \"a minute\",\n      mm: \"%d minutes\",\n      h: \"an hour\",\n      hh: \"%d hours\",\n      d: \"a day\",\n      dd: \"%d days\",\n      M: \"a month\",\n      MM: \"%d months\",\n      y: \"a year\",\n      yy: \"%d years\"\n    };\n\n    function i(r, t, e, o) {\n      return n.fromToBase(r, t, e, o);\n    }\n\n    e.en.relativeTime = o, n.fromToBase = function (t, n, i, d, u) {\n      for (var a, f, s, l = i.$locale().relativeTime || o, h = r.thresholds || [{\n        l: \"s\",\n        r: 44,\n        d: \"second\"\n      }, {\n        l: \"m\",\n        r: 89\n      }, {\n        l: \"mm\",\n        r: 44,\n        d: \"minute\"\n      }, {\n        l: \"h\",\n        r: 89\n      }, {\n        l: \"hh\",\n        r: 21,\n        d: \"hour\"\n      }, {\n        l: \"d\",\n        r: 35\n      }, {\n        l: \"dd\",\n        r: 25,\n        d: \"day\"\n      }, {\n        l: \"M\",\n        r: 45\n      }, {\n        l: \"MM\",\n        r: 10,\n        d: \"month\"\n      }, {\n        l: \"y\",\n        r: 17\n      }, {\n        l: \"yy\",\n        d: \"year\"\n      }], m = h.length, c = 0; c < m; c += 1) {\n        var y = h[c];\n        y.d && (a = d ? e(t).diff(i, y.d, !0) : i.diff(t, y.d, !0));\n        var p = (r.rounding || Math.round)(Math.abs(a));\n\n        if (s = a > 0, p <= y.r || !y.r) {\n          p <= 1 && c > 0 && (y = h[c - 1]);\n          var v = l[y.l];\n          u && (p = u(\"\" + p)), f = \"string\" == typeof v ? v.replace(\"%d\", p) : v(p, n, y.l, s);\n          break;\n        }\n      }\n\n      if (n) return f;\n      var M = s ? l.future : l.past;\n      return \"function\" == typeof M ? M(f) : M.replace(\"%s\", f);\n    }, n.to = function (r, t) {\n      return i(r, t, this, !0);\n    }, n.from = function (r, t) {\n      return i(r, t, this);\n    };\n\n    var d = function d(r) {\n      return r.$u ? e.utc() : e();\n    };\n\n    n.toNow = function (r) {\n      return this.to(d(this), r);\n    }, n.fromNow = function (r) {\n      return this.from(d(this), r);\n    };\n  };\n});","import axios from 'axios'\r\nimport dayjs from 'dayjs'\r\nimport { info } from '../data/info'\r\nimport { PodcastData, AppearanceEpisode, PodCast } from '../models/podcast'\r\n\r\nexport const getPodcastInfo = async (): Promise<PodcastData> => {\r\n   const response = await axios.get(\r\n      'https://andrepodcasts.azurewebsites.net/api/PodcastQueue'\r\n   )\r\n\r\n   const data: PodcastData = response.data\r\n   //retrieve appearances\r\n   data.podcasts.forEach(\r\n      (x) => (x.lastEpisodePublished = new Date(x.lastEpisodePublished))\r\n   )\r\n   const appearanceIds = info.me.podcastAppearances.map((x) => x.uuid)\r\n   data.queue = data.queue.map((x) => {\r\n      const podcastUuid =\r\n         typeof x.podcast === 'string' ? x.podcast : x.podcast?.uuid\r\n      x.podcast = _getPodcast(data.podcasts, podcastUuid)\r\n      return x\r\n   })\r\n   data.starred = data.starred.map((x) => {\r\n      x.podcast = _getPodcast(data.podcasts, x.podcastUuid)\r\n      return x\r\n   })\r\n   data.appearances = data.starred\r\n      .filter((x) => appearanceIds.includes(x.uuid))\r\n      .map((x) => {\r\n         const episodeInfo = info.me.podcastAppearances.find(\r\n            (episode) => episode.uuid === x.uuid\r\n         )\r\n         const appearance: AppearanceEpisode = {\r\n            ...x,\r\n            description: episodeInfo?.description || x.showNotes,\r\n            topic: episodeInfo?.topic || x.title,\r\n            url: episodeInfo?.url || x.showNotes,\r\n            published: new Date(x.published),\r\n         }\r\n         return appearance\r\n      })\r\n      .sort((a, b) => b.published.getTime() - a.published.getTime())\r\n\r\n   return data\r\n}\r\n\r\nexport const getStarredEpisodes = async () => {\r\n   const data = await getPodcastInfo()\r\n   return data.starred\r\n}\r\n\r\nexport const getShowNotes = async (episodeUuid) => {\r\n   const response = await axios.get(\r\n      `https://podcast-api.pocketcasts.com/episode/show_notes/${episodeUuid}`\r\n   )\r\n   const notes = response.data\r\n   return notes\r\n}\r\n\r\nfunction _getPodcast(\r\n   podcasts: PodCast[],\r\n   podcastUuid?: string\r\n): PodCast | undefined {\r\n   const podcast = podcasts.find((x) => x.uuid === podcastUuid)\r\n   return podcast\r\n}\r\n\r\nexport const _getListeningTimeInHours = (\r\n   timeInSeconds: number | undefined\r\n): number => {\r\n   if (!timeInSeconds) return 0\r\n   const timeInHours = Math.floor(timeInSeconds / 60 / 60)\r\n   return timeInHours\r\n}\r\n\r\nexport const _getListeningStartDate = (\r\n   dateStr: string | Date | undefined\r\n): string => {\r\n   const date = dayjs(dateStr)\r\n   const monthYear = date.format('MMMM YYYY')\r\n   return monthYear\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles'\r\nimport { AppearanceEpisode, Episode } from '../models'\r\nimport { colors, sharedStyles } from '../styles/global'\r\nimport { useWindowSize } from '../hooks/useWindowSize'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   episode: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '150px 1fr',\r\n      gap: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n      '& div': {\r\n         textAlign: 'left',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         marginBottom: theme.spacing(2),\r\n      },\r\n   },\r\n   episodeBlock: {\r\n      display: 'block',\r\n      maxHeight: '200px',\r\n      overflow: 'auto',\r\n      paddingRight: `1rem`,\r\n      color: colors.muted,\r\n   },\r\n   episodeTitle: {\r\n      marginBottom: '2rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n         textAlign: 'center',\r\n      },\r\n   },\r\n   episodeIcon: {\r\n      width: '100%',\r\n      minWidth: '80px',\r\n      [theme.breakpoints.down('sm')]: {\r\n         width: '100%',\r\n      },\r\n   },\r\n   topic: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}))\r\n\r\ninterface PodcastEpisodeProps {\r\n   episode: AppearanceEpisode\r\n}\r\n\r\nconst PodCastAppearance = (props: PodcastEpisodeProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   const { episode } = props\r\n\r\n   const windowSize = useWindowSize()\r\n   const largeScreen =\r\n      windowSize.width > theme.breakpoints.values.sm ? true : false\r\n   const episodeContainerMaxWidth = (windowSize.height / 2) * 0.9\r\n\r\n   return (\r\n      <div className={css.episode}>\r\n         <div>\r\n            <img\r\n               src={`https://static.pocketcasts.com/discover/images/130/${episode.podcastUuid}.jpg`}\r\n               alt=\"{episode.title}\"\r\n               className={css.episodeIcon}\r\n            />\r\n         </div>\r\n         <div style={{ marginLeft: theme.spacing(2) }}>\r\n            <h3 className={css.episodeTitle}>\r\n               <a href={episode.url}>{episode.title}</a>\r\n               <p className={[css.topic].join(' ')}>\r\n                  <span className={css.mutedText}>Topic:</span> {episode.topic}\r\n               </p>\r\n            </h3>\r\n            {largeScreen && (\r\n               <div\r\n                  className={[css.episodeBlock, css.mutedText].join(' ')}\r\n                  style={{ maxWidth: episodeContainerMaxWidth }}\r\n               >\r\n                  {episode.description}\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PodCastAppearance\r\n"],"sourceRoot":""}