{"version":3,"sources":["webpack:///./src/components/presntation/centerDivider.tsx","webpack:///./src/components/presntation/subHeading.tsx","webpack:///./src/components/presntation/colorBox.tsx","webpack:///./src/components/devGroupSession.tsx","webpack:///./src/pages/devGroup.tsx","webpack:///./src/components/presntation/siteSection.tsx","webpack:///./src/utils/devGroupService.ts"],"names":["useStyles","makeStyles","theme","divider","display","marginTop","marginBottom","backgroundColor","palette","secondary","main","height","width","marginLeft","marginRight","CenterDivider","useTheme","css","className","sharedStyles","heading","textTransform","spacing","SubHeading","children","pt65","wt100","join","box","lineHeight","verticalAlign","borderRadius","ColorBox","session","gridTemplateColumns","gridGap","padding","details","border","colors","muted","DevGroupSession","src","thumbnails","medium","url","alt","wt700","day","monthYear","style","textAlign","href","link","target","mutedText","title","container","DevGroup","props","useState","videos","setVideos","useEffect","getVideos","then","data","bg","map","index","paddingLeft","paddingRight","paddingTop","paddingBottom","SiteSection","conditionalStyles","a","axios","get","response","x","moment","publishedAt","format"],"mappings":"6FAAA,iDAGMA,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC7CC,QAAS,CACNC,QAAS,QACTC,UAAW,OACXC,aAAc,OACdC,gBAAiBL,EAAMM,QAAQC,UAAUC,KACzCC,OAAQ,MACRC,MAAO,QACPC,WAAY,OACZC,YAAa,YAWJC,IAPO,WACnB,IAAMb,EAAQc,cACRC,EAAMjB,EAAUE,GAEtB,OAAO,0BAAMgB,UAAWD,EAAId,Y,yGChBzBH,EAAYC,aAAW,SAACC,GAAD,sCACvBiB,YAAajB,IADU,IAE1BkB,QAAS,CACNC,cAAe,YACfhB,UAAWH,EAAMoB,QAAQ,GACzBhB,aAAcJ,EAAMoB,QAAQ,SAenBC,IAXI,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACbtB,EAAQc,cACRC,EAAMjB,EAAUE,GAEtB,OACG,yBAAKgB,UAAW,CAACD,EAAIG,QAASH,EAAIQ,KAAMR,EAAIS,OAAOC,KAAK,MACpDH,K,mHCfJxB,EAAYC,aAAW,SAACC,GAAD,sCACvBiB,YAAajB,IADU,IAE1B0B,IAAK,CACFrB,gBAAiBL,EAAMM,QAAQC,UAAUC,KACzCE,MAAO,OACPD,OAAQ,OACRkB,WAAY,OACZzB,QAAS,QACT0B,cAAe,SACfC,aAAc,YAWLC,EAPE,SAAC,GAAiB,IAAfR,EAAe,EAAfA,SACXtB,EAAQc,IACRC,EAAMjB,EAAUE,GAEtB,OAAO,yBAAKgB,UAAWD,EAAIW,KAAMJ,IChB9BxB,EAAYC,aAAW,SAACC,GAAD,sCACvBiB,YAAajB,IADU,IAE1B+B,QAAS,CACN7B,QAAS,OACT8B,oBAAqB,MACrBC,QAASjC,EAAMoB,QAAQ,GACvBc,QAASlC,EAAMoB,QAAQ,IAE1Be,QAAS,CACNjC,QAAS,OACT8B,oBAAqB,UACrBC,QAASjC,EAAMoB,QAAQ,GACvBgB,OAAQ,aAAaC,IAAOC,MAC5BJ,QAASlC,EAAMoB,QAAQ,SA+BdmB,IA3BS,SAAC,GAAgB,IAAdR,EAAc,EAAdA,QAClB/B,EAAQc,cACRC,EAAMjB,EAAUE,GACtB,OACG,yBAAKgB,UAAWD,EAAIgB,SACjB,6BACG,yBAAKS,IAAKT,EAAQU,WAAWC,OAAOC,IAAKC,IAAI,qBAEhD,yBAAK5B,UAAWD,EAAIoB,SACjB,kBAAC,EAAD,KACG,6BACG,yBAAKnB,UAAW,CAACD,EAAIQ,KAAMR,EAAI8B,OAAOpB,KAAK,MACvCM,EAAQe,KAEZ,6BAAMf,EAAQgB,aAGpB,0BAAMC,MAAO,CAAEC,UAAW,SACvB,uBAAGC,KAAMnB,EAAQoB,KAAMC,OAAO,SAASpC,UAAWD,EAAIsC,WAClDtB,EAAQuB,Y,wLC7BrBxD,EAAYC,aAAW,SAACC,GAAD,sCACvBiB,YAAajB,IADU,IAE1BuD,UAAW,CACRrD,QAAS,OACT+B,QAASjC,EAAMoB,QAAQ,GACvBY,oBAAqB,oBAyCZwB,UArCE,SAACC,GACf,IAAMzD,EAAQc,cACRC,EAAMjB,EAAUE,GAFc,EAGR0D,mBAAS,IAA9BC,EAH6B,KAGrBC,EAHqB,KAUpC,OANAC,qBAAU,WACPC,cAAYC,MAAK,SAACC,GACfJ,EAAUI,QAEb,IAGA,oCACG,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,GAAG,QACb,4BACG,kBAAC,IAAD,4BAEH,uBAAGjD,UAAWD,EAAIsC,WAAlB,2RAOA,8BACG,kBAAC,IAAD,OAEH,yBAAKrC,UAAWD,EAAIwC,WAChBI,EAAOO,KAAI,SAACnC,EAASoC,GAAV,OACT,kBAAC,IAAD,CAAiBpC,QAASA,Y,yGC5CtCjC,EAAYC,aAAW,SAACC,GAAD,sCACvBiB,YAAajB,IADU,IAE1BuD,UAAW,CACR5C,WAAY,OACZC,YAAa,OACbwD,YAAapE,EAAMoB,QAAQ,GAC3BiD,aAAcrE,EAAMoB,QAAQ,GAC5BkD,WAAYtE,EAAMoB,QAAQ,GAC1BmD,cAAevE,EAAMoB,QAAQ,GAE7B6B,UAAW,eAuBFuB,IAnBK,SAACf,GAClB,IAAMzD,EAAQc,cACRC,EAAMjB,EAAUE,GAEhBsB,EAAWmC,EAAMnC,SAGjBmD,EAAoB,CAAEpE,gBAAiB,mBAK7C,MAJW,SAHQoD,EAAMQ,KAItBQ,EAAkBpE,gBAAkB,SAIpC,yBAAKW,UAAWD,EAAIwC,UAAWP,MAAOyB,GAClCnD,K,gSC/BH,IAAMwC,EAAS,e,EAAA,G,EAAA,UAAG,8BAAAY,EAAA,sEACCC,IAAMC,IAC1B,sEAFmB,cAChBC,EADgB,OAIhBb,EAAOa,EAASb,KAAKE,KAAI,SAACY,GAG7B,OAFAA,EAAEhC,IAAMiC,IAAOD,EAAEE,aAAaC,OAAO,KACrCH,EAAE/B,UAAYgC,IAAOD,EAAEE,aAAaC,OAAO,YACpCH,KAPY,kBASfd,GATe,0C,+KAAH","file":"component---src-pages-dev-group-tsx-88e9238c5580e7193282.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   divider: {\r\n      display: 'block',\r\n      marginTop: '35px',\r\n      marginBottom: '35px',\r\n      backgroundColor: theme.palette.secondary.main,\r\n      height: '2px',\r\n      width: '150px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n   },\r\n}))\r\n\r\nconst CenterDivider = () => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n\r\n   return <span className={css.divider}></span>\r\n}\r\n\r\nexport default CenterDivider\r\n","import React from 'react'\r\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles'\r\nimport { sharedStyles } from '../../styles/global'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   heading: {\r\n      textTransform: 'uppercase',\r\n      marginTop: theme.spacing(5),\r\n      marginBottom: theme.spacing(5),\r\n   },\r\n}))\r\n\r\nconst SubHeading = ({ children }) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n\r\n   return (\r\n      <div className={[css.heading, css.pt65, css.wt100].join(' ')}>\r\n         {children}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SubHeading\r\n","import React, { useState } from 'react'\r\nimport { useTheme, makeStyles, Theme } from '@material-ui/core'\r\nimport { sharedStyles } from '../../styles/global'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   box: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n      width: '90px',\r\n      height: '85px',\r\n      lineHeight: '40px',\r\n      display: 'block',\r\n      verticalAlign: 'center',\r\n      borderRadius: '8px',\r\n   },\r\n}))\r\n\r\nconst ColorBox = ({ children }) => {\r\n   const theme = useTheme\r\n   const css = useStyles(theme)\r\n\r\n   return <div className={css.box}>{children}</div>\r\n}\r\n\r\nexport default ColorBox\r\n","import React from 'react'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../styles/global'\r\nimport ColorBox from '../components/presntation/colorBox'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   session: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '1fr',\r\n      gridGap: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n   },\r\n   details: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '1fr 3fr',\r\n      gridGap: theme.spacing(2),\r\n      border: `1px solid ${colors.muted}`,\r\n      padding: theme.spacing(2),\r\n   },\r\n}))\r\n\r\nconst DevGroupSession = ({ session }) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   return (\r\n      <div className={css.session}>\r\n         <div>\r\n            <img src={session.thumbnails.medium.url} alt=\"{session.title}\" />\r\n         </div>\r\n         <div className={css.details}>\r\n            <ColorBox>\r\n               <div>\r\n                  <div className={[css.pt65, css.wt700].join(' ')}>\r\n                     {session.day}\r\n                  </div>\r\n                  <div>{session.monthYear}</div>\r\n               </div>\r\n            </ColorBox>\r\n            <span style={{ textAlign: 'left' }}>\r\n               <a href={session.link} target=\"_blank\" className={css.mutedText}>\r\n                  {session.title}\r\n               </a>\r\n            </span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DevGroupSession\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles, useTheme, Theme } from '@material-ui/core/styles'\r\n\r\nimport { sharedStyles } from '../styles/global'\r\nimport SiteSection from '../components/presntation/siteSection'\r\nimport SubHeading from '../components/presntation/subHeading'\r\nimport CenterDivider from '../components/presntation/centerDivider'\r\nimport { getVideos } from '../utils/devGroupService'\r\nimport { PageProps } from 'gatsby'\r\nimport DevGroupSession from '../components/devGroupSession'\r\nimport Nav from '../components/nav'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   container: {\r\n      display: 'grid',\r\n      gridGap: theme.spacing(2),\r\n      gridTemplateColumns: '1fr 1fr 1fr',\r\n   },\r\n}))\r\n\r\nconst DevGroup = (props: PageProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   const [videos, setVideos] = useState([])\r\n   useEffect(() => {\r\n      getVideos().then((data) => {\r\n         setVideos(data)\r\n      })\r\n   }, [])\r\n\r\n   return (\r\n      <>\r\n         <Nav />\r\n         <SiteSection bg=\"dark\">\r\n            <h2>\r\n               <SubHeading>Dev Group Sessions</SubHeading>\r\n            </h2>\r\n            <p className={css.mutedText}>\r\n               Attending developer meet ups are a great way of expanding your\r\n               knowledge and skills. But many of us have family and other\r\n               obligations outside of work so I created and hosted a bi-weekly\r\n               NASA wide developer group that ran for over 8 years. Below are an\r\n               excert from those sessions.\r\n            </p>\r\n            <span>\r\n               <CenterDivider />\r\n            </span>\r\n            <div className={css.container}>\r\n               {videos.map((session, index) => (\r\n                  <DevGroupSession session={session} />\r\n               ))}\r\n            </div>\r\n         </SiteSection>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default DevGroup\r\n","import React from 'react'\r\nimport { useTheme, makeStyles, Theme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../../styles/global'\r\n\r\ntype bgTone = 'dark' | 'light'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   container: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      paddingLeft: theme.spacing(3),\r\n      paddingRight: theme.spacing(3),\r\n      paddingTop: theme.spacing(5),\r\n      paddingBottom: theme.spacing(5),\r\n\r\n      textAlign: 'center',\r\n   },\r\n}))\r\n\r\nconst SiteSection = (props) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n\r\n   const children = props.children\r\n   const bg: bgTone = props.bg\r\n\r\n   const conditionalStyles = { backgroundColor: 'rgb(23, 23, 23)' }\r\n   if (bg === 'dark') {\r\n      conditionalStyles.backgroundColor = 'black'\r\n   }\r\n\r\n   return (\r\n      <div className={css.container} style={conditionalStyles}>\r\n         {children}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SiteSection\r\n","import axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nexport const getVideos = async () => {\r\n   const response = await axios.get(\r\n      'https://gsfcdevgroup.azurewebsites.net/api/GetGSFCDevGroupSessions'\r\n   )\r\n   const data = response.data.map((x) => {\r\n      x.day = moment(x.publishedAt).format('D')\r\n      x.monthYear = moment(x.publishedAt).format('MMM-YYYY')\r\n      return x\r\n   })\r\n   return data\r\n}\r\n"],"sourceRoot":""}