{"version":3,"sources":["webpack:///./src/components/podcast.tsx","webpack:///./src/data/info.ts","webpack:///./node_modules/dayjs/plugin/relativeTime.js","webpack:///./src/utils/podcastService.ts","webpack:///./src/types.ts","webpack:///./src/pages/podcasts.tsx"],"names":["dayjs","relativeTime","useStyles","makeStyles","theme","sharedStyles","podcastBlock","display","gridGap","spacing","gridTemplateColumns","border","colors","muted","borderRadius","padding","textAlign","breakpoints","down","title","marginBottom","subTitle","Podcast","text","length","substr","lastSpaceIndex","data","useTheme","css","useState","show","setShow","className","join","src","uuid","alt","pt30","href","url","mutedText","pt20","lastEpisodePublished","fromNow","displayFullDetails","description","substring","lastIndexOf","onClick","showDetails","info","me","firstName","lastName","email","age","diff","workExperience","company","start","end","responsibilities","social","name","username","link","projects","code","repo","podcastAppearances","pocketCastUUID","podcastName","topic","nasa","lastDay","module","exports","r","t","e","n","prototype","o","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","i","fromToBase","en","u","a","f","l","$locale","thresholds","c","p","rounding","Math","round","abs","v","replace","to","this","from","$u","utc","toNow","getPodcastInfo","axios","get","response","TabEnum","container","gap","margin","episode","episodeTitle","episodeIcon","width","minWidth","tabs","marginTop","tabHeader","fontSize","divider","backgroundColor","palette","secondary","main","height","marginLeft","marginRight","count","color","PodcastPage","props","twitter","find","x","queue","podcasts","starred","podcastData","setData","setTabs","Starred","visibleTab","setVisibleTab","largeScreen","useWindowSize","values","sm","useEffect","then","value","Queue","Subscribed","active","links","home","target","profile","resume","devGroup","blog","bg","map","tab","isActive","headerCss","index","key","podcast","style","maxHeight","overflowY","dangerouslySetInnerHTML","__html","showNotes","podcastUuid"],"mappings":"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","file":"component---src-pages-podcasts-tsx-2e6d8cba15b2c9548e3d.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { sharedStyles, colors } from '../styles/global'\r\nimport * as dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\ndayjs.extend(relativeTime)\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   podcastBlock: {\r\n      display: 'grid',\r\n      gridGap: theme.spacing(2),\r\n      gridTemplateColumns: '1fr 2fr',\r\n      border: `1px solid ${colors.muted}`,\r\n      borderRadius: '10px',\r\n      padding: theme.spacing(2),\r\n      '& div': {\r\n         textAlign: 'left',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         '& div': {\r\n            textAlign: 'center',\r\n         },\r\n      },\r\n   },\r\n   title: {\r\n      marginBottom: theme.spacing(2),\r\n   },\r\n   subTitle: {\r\n      marginBottom: theme.spacing(1),\r\n   },\r\n}))\r\n\r\nconst shorten = (text, length) => {\r\n   let substr = text.substring(0, length)\r\n   const lastSpaceIndex = substr.lastIndexOf(' ')\r\n   substr = substr.substring(0, lastSpaceIndex)\r\n   return substr\r\n}\r\n\r\nconst Podcast = ({ data }) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n\r\n   const [show, setShow] = useState(data)\r\n   const showDetails = (show) => {\r\n      show.displayFullDetails = true\r\n      setShow({ ...show })\r\n   }\r\n\r\n   return (\r\n      <div className={[css.podcastBlock].join(' ')}>\r\n         <div>\r\n            <img\r\n               src={`https://static.pocketcasts.com/discover/images/130/${show.uuid}.jpg`}\r\n               alt=\"{show.title}\"\r\n            />\r\n         </div>\r\n         <div>\r\n            <div className={[css.title, css.pt30].join(' ')}>\r\n               <a href={show.url}>{show.title}</a>\r\n            </div>\r\n            <p className={[css.mutedText, css.pt20, css.subTitle].join(' ')}>\r\n               Latest Episode: {dayjs(show.lastEpisodePublished).fromNow()}\r\n            </p>\r\n            <p>\r\n               {show.displayFullDetails || show.description.length < 200 ? (\r\n                  <span>{show.description}</span>\r\n               ) : (\r\n                  <div>\r\n                     {shorten(show.description, 200)} ...{' '}\r\n                     <a onClick={() => showDetails(show)}>show more</a>\r\n                  </div>\r\n               )}\r\n            </p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Podcast\r\n","import dayjs from 'dayjs'\r\ninterface Info {\r\n   me: AboutMeInfo\r\n   nasa: NASAInfo\r\n}\r\n\r\ninterface AboutMeInfo {\r\n   firstName: string\r\n   lastName: string\r\n   email: string\r\n   age: number\r\n   workExperience: WorkExperience[]\r\n   social: Social[]\r\n   projects: Project[]\r\n   podcastAppearances: PodcastAppearance[]\r\n}\r\n\r\ninterface WorkExperience {\r\n   company: string\r\n   title: string\r\n   start: string\r\n   end: string\r\n   responsibilities: string[]\r\n}\r\n\r\ninterface Social {\r\n   name: string\r\n   username: string\r\n   link: string\r\n}\r\n\r\ninterface Project {\r\n   title: string\r\n   description: string\r\n   code?: Code\r\n}\r\n\r\ninterface Code {\r\n   repo: string\r\n   url: string\r\n}\r\n\r\ninterface PodcastAppearance {\r\n   pocketCastUUID: string\r\n   podcastName: string\r\n   topic: string\r\n   description?: string\r\n   url?: string\r\n}\r\n\r\ninterface NASAInfo {\r\n   lastDay: string\r\n}\r\n\r\nexport const info: Info = {\r\n   me: {\r\n      firstName: 'Andre',\r\n      lastName: 'Young',\r\n      email: 'andrejyoung@gmail.com',\r\n      age: dayjs().diff(dayjs('1979-09', 'YYYY-MM'), 'years'),\r\n      workExperience: [\r\n         {\r\n            company: 'Capital One',\r\n            title: 'Senior Manager, Software Engineering',\r\n            start: '2020-04',\r\n            end: '',\r\n            responsibilities: [\r\n               'Technical lead for the Safehouse and Discovery teams.',\r\n               'Talent and Performance management.',\r\n               'Development and coaching team members.',\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC Inuteq (NASA)',\r\n            title: 'Application Development Lead & IT Lead',\r\n            start: '2012-07',\r\n            end: '2020-04',\r\n            responsibilities: [\r\n               'I served as the Application Development Lead for the contract, participating in senior management discussions and setting development goals and standards for the contract.',\r\n               'I mentored developers at all levels, providing feedback on code and career coaching.',\r\n               'I also served as the Lead developer and primary point of contact for 5 active projects with 3 separate customers including a redesign and re-platforming of the Exploration & Space Communications (ESC) public website from Drupal to Gatsby, NodeJS and ASP.NET Core.',\r\n               'Lastly I served as the IT manager for the Exploration & Space Communications Division (Code 450) managing both development and operation activities.',\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC PRIMUS (NASA)',\r\n            title: 'Senior Application Developer',\r\n            start: '2011-07',\r\n            end: '2012-07',\r\n            responsibilities: [\r\n               `Designed and implemented new features for an online intern registration and selection (SOLAR) system. Provided architectural design support for the next version a large configuration management (CM) tool used by multiple flight projects at NASA's Goddard Space Flight Center (GSFC). Assisted with other applications as needed.`,\r\n            ],\r\n         },\r\n         {\r\n            company: 'ASRC Federal (NASA)',\r\n            title: 'Senior Programmer',\r\n            start: '2007-07',\r\n            end: '2011-07',\r\n            responsibilities: [\r\n               `Tailored large scaled CM applications written primarily in Classic ASP to meet changing user requirements and needs.`,\r\n            ],\r\n         },\r\n         {\r\n            company: 'Systems Management Engineering Inc',\r\n            title: 'Software Engineer',\r\n            start: '2007-05',\r\n            end: '2007-07',\r\n            responsibilities: [\r\n               `Implement modules for Peace Corps’ Volunteer Information Database Application Project (VIDA) to transition from MS Access to a .Net 2.0 Winforms application. (MS SQL, ADO.Net, Data Dynamics ActiveReports, Infragistics NetAdvantage)`,\r\n            ],\r\n         },\r\n      ],\r\n      social: [\r\n         {\r\n            name: 'GitHub',\r\n            username: 'youngaj',\r\n            link: 'https://github.com/youngaj',\r\n         },\r\n         {\r\n            name: 'Twitter',\r\n            username: '@Dreyoung79',\r\n            link: 'https://twitter.com/Dreyoung79',\r\n         },\r\n         {\r\n            name: 'YouTube',\r\n            username: 'youngaj',\r\n            link:\r\n               'https://www.youtube.com/channel/UCr-_BId5w_QTTKcthhNRVlw/videos',\r\n         },\r\n         {\r\n            name: 'LinkedIn',\r\n            username: 'Andre Young',\r\n            link: 'https://www.linkedin.com/in/andre-young-b9a9b5b/',\r\n         },\r\n      ],\r\n      projects: [\r\n         {\r\n            title: 'Commercial Real Estate Management (CREM)',\r\n            description: 'Improve rent collection and property management',\r\n         },\r\n         {\r\n            title: 'OneStream & Snowflake',\r\n            description:\r\n               'Gain insights into the Focus Platform by recording events via OneStream (Kafka) into Snowflake and internal C1 data lake.',\r\n         },\r\n         {\r\n            title: 'Conveyor Belt (CB)',\r\n            description:\r\n               'Meta-platform to enable internal development teams to onboard and easily use internal platforms.  Drives down cycle times and ensures governance by preventing intents without the appropriate approvals from being deployed into protected environments.',\r\n         },\r\n         {\r\n            title: 'Website',\r\n            description: 'Gatsby redesign of this website',\r\n            code: {\r\n               repo: 'gatsby-website',\r\n               url: 'https://github.com/youngaj/gatsby-website',\r\n            },\r\n         },\r\n      ],\r\n      podcastAppearances: [\r\n         {\r\n            pocketCastUUID: '3414c425-da9f-4b6d-82bf-2062b636d03d',\r\n            podcastName: 'Web Rush',\r\n            topic: 'From IC to PL',\r\n            description: '',\r\n            url:\r\n               'https://webrush.io/episodes/episode-164-rising-stumbling-and-getting-up-again-life-as-a-tech-manager',\r\n         },\r\n         {\r\n            pocketCastUUID: '358e82f0-a54e-0136-7b93-27f978dac4db',\r\n            podcastName: 'Web Rush',\r\n            topic: 'Testing',\r\n            description: '',\r\n            url:\r\n               'https://webrush.simplecast.com/episodes/episode-143-old-man-yells-at-tests-andre-young',\r\n         },\r\n      ],\r\n   },\r\n   nasa: {\r\n      lastDay: '2020/04/20',\r\n   },\r\n}\r\n","require(\"core-js/modules/es6.regexp.replace\");\n\n!function (r, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : r.dayjs_plugin_relativeTime = t();\n}(this, function () {\n  \"use strict\";\n\n  return function (r, t, e) {\n    r = r || {};\n    var n = t.prototype,\n        o = {\n      future: \"in %s\",\n      past: \"%s ago\",\n      s: \"a few seconds\",\n      m: \"a minute\",\n      mm: \"%d minutes\",\n      h: \"an hour\",\n      hh: \"%d hours\",\n      d: \"a day\",\n      dd: \"%d days\",\n      M: \"a month\",\n      MM: \"%d months\",\n      y: \"a year\",\n      yy: \"%d years\"\n    };\n\n    function i(r, t, e, o) {\n      return n.fromToBase(r, t, e, o);\n    }\n\n    e.en.relativeTime = o, n.fromToBase = function (t, n, i, d, u) {\n      for (var a, f, s, l = i.$locale().relativeTime || o, h = r.thresholds || [{\n        l: \"s\",\n        r: 44,\n        d: \"second\"\n      }, {\n        l: \"m\",\n        r: 89\n      }, {\n        l: \"mm\",\n        r: 44,\n        d: \"minute\"\n      }, {\n        l: \"h\",\n        r: 89\n      }, {\n        l: \"hh\",\n        r: 21,\n        d: \"hour\"\n      }, {\n        l: \"d\",\n        r: 35\n      }, {\n        l: \"dd\",\n        r: 25,\n        d: \"day\"\n      }, {\n        l: \"M\",\n        r: 45\n      }, {\n        l: \"MM\",\n        r: 10,\n        d: \"month\"\n      }, {\n        l: \"y\",\n        r: 17\n      }, {\n        l: \"yy\",\n        d: \"year\"\n      }], m = h.length, c = 0; c < m; c += 1) {\n        var y = h[c];\n        y.d && (a = d ? e(t).diff(i, y.d, !0) : i.diff(t, y.d, !0));\n        var p = (r.rounding || Math.round)(Math.abs(a));\n\n        if (s = a > 0, p <= y.r || !y.r) {\n          p <= 1 && c > 0 && (y = h[c - 1]);\n          var v = l[y.l];\n          u && (p = u(\"\" + p)), f = \"string\" == typeof v ? v.replace(\"%d\", p) : v(p, n, y.l, s);\n          break;\n        }\n      }\n\n      if (n) return f;\n      var M = s ? l.future : l.past;\n      return \"function\" == typeof M ? M(f) : M.replace(\"%s\", f);\n    }, n.to = function (r, t) {\n      return i(r, t, this, !0);\n    }, n.from = function (r, t) {\n      return i(r, t, this);\n    };\n\n    var d = function d(r) {\n      return r.$u ? e.utc() : e();\n    };\n\n    n.toNow = function (r) {\n      return this.to(d(this), r);\n    }, n.fromNow = function (r) {\n      return this.from(d(this), r);\n    };\n  };\n});","import axios from 'axios'\r\n\r\nexport const getPodcastInfo = async () => {\r\n   const response = await axios.get(\r\n      'https://andrepodcasts.azurewebsites.net/api/PodcastQueue'\r\n   )\r\n\r\n   const data = response.data\r\n   return data\r\n}\r\n\r\nexport const getStarredEpisodes = async () => {\r\n   const data = await getPodcastInfo()\r\n   return data.starred\r\n}\r\n\r\nexport const getShoweNotes = async (episodeUuid) => {\r\n   const response = await axios.get(\r\n      `https://podcast-api.pocketcasts.com/episode/show_notes/${episodeUuid}`\r\n   )\r\n   const notes = response.data\r\n   return notes\r\n}\r\n","export type Blog = {\r\n   date: Date\r\n   title: string\r\n   slug: string\r\n}\r\n\r\nexport interface Video {\r\n   id: string\r\n   link: string\r\n   title: string\r\n   description: string\r\n   publishedAt: Date\r\n}\r\n\r\nexport enum TabEnum {\r\n   Starred = 'Starred',\r\n   Queue = 'Queue',\r\n   Subscribed = 'Subscribed',\r\n}\r\nexport interface Tab {\r\n   title: string\r\n   count: number\r\n   value: TabEnum\r\n}\r\n","// Gatsby supports TypeScript natively!\r\nimport React, { useEffect, useState } from 'react'\r\nimport { PageProps } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport Nav from '../components/nav'\r\nimport { getPodcastInfo } from '../utils/podcastService'\r\nimport { makeStyles, Theme, useTheme } from '@material-ui/core'\r\nimport { colors, sharedStyles } from '../styles/global'\r\nimport Podcast from '../components/podcast'\r\nimport SiteSection from '../components/presentation/siteSection'\r\nimport { info } from '../data/info'\r\nimport SubHeading from '../components/presentation/subHeading'\r\nimport { Tab, TabEnum } from '../types'\r\nimport { useWindowSize } from '../hooks/useWindowSize'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n   ...sharedStyles(theme),\r\n   container: {\r\n      display: 'grid',\r\n      gap: '.5rem',\r\n      gridTemplateColumns: '1fr 1fr',\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         margin: 'auto',\r\n      },\r\n   },\r\n   episode: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '90px 1fr',\r\n      gap: theme.spacing(2),\r\n      border: `1px solid ${colors.muted}`,\r\n      borderRadius: '10px',\r\n      padding: theme.spacing(2),\r\n      '& div': {\r\n         textAlign: 'left',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n         gridTemplateColumns: '1fr',\r\n         marginBottom: theme.spacing(2),\r\n      },\r\n   },\r\n   episodeTitle: {\r\n      marginBottom: '2rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n         textAlign: 'center',\r\n      },\r\n   },\r\n   episodeIcon: {\r\n      width: '100%',\r\n      minWidth: '80px',\r\n      [theme.breakpoints.down('sm')]: {\r\n         width: '100%',\r\n      },\r\n   },\r\n\r\n   tabs: {\r\n      display: 'grid',\r\n      gridTemplateColumns: '1fr 1fr 1fr',\r\n      gap: '1rem',\r\n      margin: '1rem',\r\n      marginTop: '2rem',\r\n   },\r\n   tabHeader: {\r\n      fontSize: '1.5rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n         fontSize: '1.0rem',\r\n      },\r\n   },\r\n   divider: {\r\n      display: 'block',\r\n      marginTop: '1rem',\r\n      marginBottom: '15px',\r\n      backgroundColor: theme.palette.secondary.main,\r\n      height: '2px',\r\n      width: '150px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n         width: '100px',\r\n      },\r\n   },\r\n   count: {\r\n      fontSize: '1.2rem',\r\n      color: colors.muted,\r\n      [theme.breakpoints.down('sm')]: {\r\n         display: 'none',\r\n      },\r\n   },\r\n}))\r\n\r\nconst podcastSort = (a, b) => {\r\n   return (\r\n      Date.parse(b.lastEpisodePublished) - Date.parse(a.lastEpisodePublished)\r\n   )\r\n}\r\n\r\nconst PodcastPage = (props: PageProps) => {\r\n   const theme = useTheme()\r\n   const css = useStyles(theme)\r\n   const twitter = info.me.social.find((x) => x.name === 'Twitter')\r\n\r\n   const [podcastData, setData] = useState({\r\n      queue: [],\r\n      podcasts: [],\r\n      starred: [],\r\n   })\r\n   const [tabs, setTabs] = useState<Tab[]>([])\r\n   const [visibleTab, setVisibleTab] = useState<TabEnum>(TabEnum.Starred)\r\n   const windowSize = useWindowSize()\r\n   const largeScreen =\r\n      windowSize.width > theme.breakpoints.values.sm ? true : false\r\n\r\n   useEffect(() => {\r\n      getPodcastInfo().then((data) => {\r\n         setData({ ...data })\r\n         setTabs([\r\n            {\r\n               title: `Stared`,\r\n               count: data.starred?.length,\r\n               value: TabEnum.Starred,\r\n            },\r\n            {\r\n               title: `In Queue`,\r\n               count: data.queue?.length,\r\n               value: TabEnum.Queue,\r\n            },\r\n            {\r\n               title: `Subscribed`,\r\n               count: data.podcasts?.length,\r\n               value: TabEnum.Subscribed,\r\n            },\r\n         ])\r\n      })\r\n   }, [])\r\n\r\n   const links = {\r\n      home: { title: 'Home', target: '/' },\r\n      profile: { title: 'Profile', target: '/#profile' },\r\n      resume: { title: 'Resume', target: '/#resume' },\r\n      podcasts: { title: 'Podcasts', target: '/#podcastQueue' },\r\n      devGroup: { title: 'Dev Group', target: '/#devGroup' },\r\n      blog: { title: 'Blog', target: '/#blog' },\r\n   }\r\n\r\n   return (\r\n      <Layout>\r\n         <Nav active=\"podcasts\" links={links}></Nav>\r\n         <SiteSection bg=\"dark\">\r\n            <SubHeading>Podcasts</SubHeading>\r\n            <p className={css.mutedText}>\r\n               I subscribe to {podcastData.podcasts.length} podcasts. Podcasts\r\n               are a great way to keep up with the latest around the industry.\r\n               They are also a great way not to go insane during long commutes.\r\n               Below is a list of the podcasts I currently subscribe to. Follow\r\n               along and/or send me suggestions{' '}\r\n               <a href={twitter.link}>{twitter.username}</a>\r\n            </p>\r\n            <div className={css.tabs}>\r\n               {tabs.map((tab) => {\r\n                  const isActive = tab.value === visibleTab\r\n                  const headerCss = isActive\r\n                     ? css.tabHeader\r\n                     : [css.tabHeader, css.mutedText].join(' ')\r\n                  return (\r\n                     <span\r\n                        className={headerCss}\r\n                        onClick={(e) => setVisibleTab(tab.value)}\r\n                     >\r\n                        {tab.title}\r\n                        <span className={css.count}> ({tab.count})</span>\r\n                        {isActive && <span className={css.divider}></span>}\r\n                     </span>\r\n                  )\r\n               })}\r\n            </div>\r\n\r\n            {visibleTab === TabEnum.Queue && (\r\n               <div className={css.container}>\r\n                  {podcastData.queue.map((episode, index) => (\r\n                     <div\r\n                        key={`episode-${episode.title}-${index}`}\r\n                        className={css.episode}\r\n                     >\r\n                        <div>\r\n                           <img\r\n                              src={`https://static.pocketcasts.com/discover/images/130/${episode.podcast}.jpg`}\r\n                              alt=\"{episode.title}\"\r\n                              className={css.episodeIcon}\r\n                           />\r\n                        </div>\r\n                        <div style={{ marginLeft: theme.spacing(2) }}>\r\n                           <h3 className={css.episodeTitle}>\r\n                              <a href={episode.url}>{episode.title}</a>\r\n                           </h3>\r\n                           {largeScreen && (\r\n                              <div\r\n                                 style={{\r\n                                    display: 'block',\r\n                                    maxHeight: '200px',\r\n                                    //border: '1px solid yellow',\r\n                                    //maxWidth: '450px',\r\n                                    overflowY: 'auto',\r\n                                 }}\r\n                                 dangerouslySetInnerHTML={{\r\n                                    __html: episode.showNotes,\r\n                                 }}\r\n                              />\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            )}\r\n            {visibleTab === TabEnum.Subscribed && (\r\n               <div className={css.container}>\r\n                  {podcastData.podcasts.map((show, index) => (\r\n                     <Podcast\r\n                        data={show}\r\n                        key={`episode-${show.title}-${index}`}\r\n                     />\r\n                  ))}\r\n               </div>\r\n            )}\r\n            {visibleTab === TabEnum.Starred && (\r\n               <div className={css.container}>\r\n                  {podcastData.starred.map((episode, index) => (\r\n                     <div\r\n                        key={`episode-${episode.title}-${index}`}\r\n                        className={css.episode}\r\n                     >\r\n                        <div>\r\n                           <img\r\n                              src={`https://static.pocketcasts.com/discover/images/130/${episode.podcastUuid}.jpg`}\r\n                              alt=\"{episode.title}\"\r\n                              className={css.episodeIcon}\r\n                           />\r\n                        </div>\r\n                        <div style={{ marginLeft: theme.spacing(2) }}>\r\n                           <h3 className={css.episodeTitle}>\r\n                              <a href={episode.url}>{episode.title}</a>\r\n                           </h3>\r\n                           {largeScreen && (\r\n                              <div\r\n                                 style={{\r\n                                    display: 'block',\r\n                                    maxHeight: '200px',\r\n                                    //border: '1px solid yellow',\r\n                                    //maxWidth: '450px',\r\n                                    overflowY: 'auto',\r\n                                 }}\r\n                                 dangerouslySetInnerHTML={{\r\n                                    __html: episode.showNotes,\r\n                                 }}\r\n                              />\r\n                           )}\r\n                        </div>\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            )}\r\n         </SiteSection>\r\n      </Layout>\r\n   )\r\n}\r\n\r\nexport default PodcastPage\r\n"],"sourceRoot":""}